{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,8EAUMC,GAAO,EAAAC,EAAAC,WACPC,EAAa,IAAI,EAAAC,EAAAF,SACjBG,EAAS,IAAI,EAAAC,EAAAJ,SACbK,EAAS,IAAI,EAAAC,EAAAN,S,SAUJO,I,OAAAA,EAAfC,EAAAZ,EAAA,CAAAY,EAAAC,GAAAC,MAAA,SAAAC,EAAwBC,G,IAQdC,E,yEAPRD,EAAEE,iBACFb,EAAWc,MAAQH,EAAEI,cAAcC,SAASC,YAAYC,OAExD,EAAAC,EAAAC,yBACApB,EAAWqB,Y,kBAGUrB,EAAWsB,kB,UAEX,KAFbV,EAAIW,EAAAC,MAEDC,OAAgBzB,EAAWc,MAAK,C,yCAChCZ,EAAOwB,gB,QAGhBxB,EAAOyB,kBAAkBf,EAAKgB,YAC9B,EAAAT,EAAAU,wBAAuBjB,G,kDAEvBkB,QAAQC,MAAKR,EAAAS,I,2DAjBMC,MAAAC,KAAAC,U,CARvBtC,EAAKuC,WAAWC,iBAAiB,U,SAQT1B,G,OAATL,EAAQ2B,MAAAC,KAAAC,U,IAPvBtC,EAAKyC,YAAYD,iBAAiB,SAAS,WACzCjC,EAAOkC,a,IAETC,SAASF,iBAAiB,UAAU,WAClCjC,EAAOoC,mB,IAwBT,IAmBMC,EAAW,IAAIC,sBAnBL,SAAAC,GACC,I,EAAfA,EAAQC,S,EAAQrC,EAAAZ,EAAA,CAAAY,EAAAC,GAAAC,MAAA,SAAAC,EAAMmC,G,IAEZjC,E,sEADJiC,EAAMC,iBAAkB9C,EAAWc,MAAK,C,+BACvBd,EAAWsB,kB,OAAxBV,EAAIW,EAAAC,MAEV,EAAAL,EAAAU,wBAAuBjB,GAEnBA,EAAKgB,WAAa5B,EAAW+C,YAAc/C,EAAWgD,WACxDP,EAASQ,UAAUpD,EAAKqD,UACxBhD,EAAOiD,sB,oDARSN,G,oCAcR,CACdO,WAAY,UAIdX,EAASY,QAAQxD,EAAKqD,S","sources":["src/js/02-infinite-scroll.js"],"sourcesContent":["import '../sass/index.scss';\nimport getRefs from './components/getRefs';\nimport ApiService from './components/api-service';\nimport {\n  createMarkupPhotoCards,\n  clearMarkupPhotoCards,\n} from './components/markup-cards';\nimport NotifyMessages from './components/notify-messages';\nimport Scroll from './components/scrollTo';\n\nconst refs = getRefs();\nconst apiServise = new ApiService();\nconst notify = new NotifyMessages();\nconst scroll = new Scroll();\n\nrefs.searchForm.addEventListener('submit', onSearch);\nrefs.scrollToTop.addEventListener('click', () => {\n  scroll.scrollToTop();\n});\ndocument.addEventListener('scroll', () => {\n  scroll.handleScrollToTop();\n});\n\nasync function onSearch(e) {\n  e.preventDefault();\n  apiServise.query = e.currentTarget.elements.searchQuery.value;\n\n  clearMarkupPhotoCards();\n  apiServise.resetPage();\n\n  try {\n    const data = await apiServise.fetchPhotoCards();\n\n    if (data.total === 0 || !apiServise.query) {\n      return notify.onFetchError();\n    }\n\n    notify.onTotalPhotoCards(data.totalHits);\n    createMarkupPhotoCards(data);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nconst onEntry = entries => {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting && apiServise.query) {\n      const data = await apiServise.fetchPhotoCards();\n\n      createMarkupPhotoCards(data);\n\n      if (data.totalHits <= apiServise.currentPage * apiServise.per_page) {\n        observer.unobserve(refs.sentinel);\n        notify.onFinishPhotoCards();\n      }\n    }\n  });\n};\n\nconst options = {\n  rootMargin: '100px',\n};\n\nconst observer = new IntersectionObserver(onEntry, options);\nobserver.observe(refs.sentinel);\n"],"names":["$bpxeT","parcelRequire","$5004a27847ccf0a5$var$refs","$ejYMw","default","$5004a27847ccf0a5$var$apiServise","$gYaUm","$5004a27847ccf0a5$var$notify","$cBT1L","$5004a27847ccf0a5$var$scroll","$4ecxU","$5004a27847ccf0a5$var$_onSearch","$parcel$interopDefault","$2TvXO","mark","_callee","e","data","preventDefault","query","currentTarget","elements","searchQuery","value","$bsg3S","clearMarkupPhotoCards","resetPage","fetchPhotoCards","_ctx","sent","total","onFetchError","onTotalPhotoCards","totalHits","createMarkupPhotoCards","console","error","t0","apply","this","arguments","searchForm","addEventListener","scrollToTop","document","handleScrollToTop","$5004a27847ccf0a5$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","currentPage","per_page","unobserve","sentinel","onFinishPhotoCards","rootMargin","observe"],"version":3,"file":"02-infinite-scroll.478ee24b.js.map"}